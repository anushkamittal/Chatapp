{"version":3,"sources":["../src/index.js"],"names":["PORT","app","server","http","createServer","use","exposedHeaders","bodyParser","json","limit","Database","connect","then","db","console","log","catch","err","models","Model","routers","AppRouter","listen","process","env","address","port"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,OAAO,IAAb;AACA,IAAMC,MAAM,wBAAZ;AACAA,IAAIC,MAAJ,GAAaC,eAAKC,YAAL,CAAkBH,GAAlB,CAAb;;AAGAA,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;;AAGAJ,IAAII,GAAJ,CAAQ,oBAAK;AACTC,oBAAgB;AADP,CAAL,CAAR;;AAIAL,IAAII,GAAJ,CAAQE,qBAAWC,IAAX,CAAgB;AACpBC,WAAO;AADa,CAAhB,CAAR;;AAIA;;AAEA,IAAIC,kBAAJ,GAAeC,OAAf,GAAyBC,IAAzB,CAA8B,UAACC,EAAD,EAAO;;AAEjCC,YAAQC,GAAR,CAAY,uBAAZ;;AAEAd,QAAIY,EAAJ,GAASA,EAAT;AACH,CALD,EAKGG,KALH,CAKS,UAACC,GAAD,EAAQ;AACb,UAAOA,GAAP;AACH,CAPD;;AASA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEAhB,IAAIiB,MAAJ,GAAa,IAAIC,gBAAJ,CAAUlB,GAAV,CAAb;AACAA,IAAImB,OAAJ,GAAc,IAAIC,mBAAJ,CAAcpB,GAAd,CAAd;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCAA,IAAIC,MAAJ,CAAWoB,MAAX,CAAkBC,QAAQC,GAAR,CAAYxB,IAAZ,IAAoBA,IAAtC,EAA4C,YAAM;AAC1Cc,YAAQC,GAAR,6BAAsCd,IAAIC,MAAJ,CAAWuB,OAAX,GAAqBC,IAA3D;AACP,CAFD;;kBAIezB,G","file":"index.js","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport cors from 'cors';\nimport morgan from 'morgan';\nimport bodyParser from 'body-parser';\nimport WebSocketServer,{Server} from 'ws'; \nimport AppRouter from './app-router';\nimport Model from './models';\nimport Database from './database';\n\nconst PORT = 3001;\nconst app = express();\napp.server = http.createServer(app);\n\n\napp.use(morgan('dev'));\n\n\napp.use(cors({\n    exposedHeaders: \"*\"\n}));\n\napp.use(bodyParser.json({\n    limit: '50mb'\n}));\n\n//connect to database\n\nnew Database().connect().then((db) =>{\n\n    console.log('successful connection');\n\n    app.db = db;\n}).catch((err) =>{\n    throw (err);\n});\n\n// new Database().connect((err,db) => {\n\n//     if(err){\n//         throw(err);\n//     }\n\n//     console.log('Succesfully connected to database with no error');\n\n//     app.db = db;\n\n// });\n//end of connection to database\n\napp.models = new Model(app);\napp.routers = new AppRouter(app);\n\n/*\n\napp.wss =new Server({\n    server: app.server\n});\n\nlet clients=[];\n\napp.wss.on('connection',(connection)=>{\n    \n\n    const userId = clients.length+1;\n\n    connection.userId = userId;\n\n    const newClient ={\n        ws:connection,\n        userId: userId,\n    };\n    \n    clients.push(newClient);\n\n    connection.on('message',(message)=>{\n        console.log('message from: ',message);\n    })\n\n    console.log(\"New Client Connected with userId: \",userId);\n\n    connection.on('close',()=>{\n        console.log('Client with ',userId, 'disconnected');\n\n        clients = clients.filter((client)=> client.userId != userId);\n    });\n});\n\n*/\n\napp.server.listen(process.env.PORT || PORT, () => {\n        console.log(`App is running on port ${app.server.address().port}`);\n});\n\nexport default app;\n"]}